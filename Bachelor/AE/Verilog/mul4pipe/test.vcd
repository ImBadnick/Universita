$date
	Thu Jan  2 20:45:09 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module register $end
$var wire 1 ! clock $end
$var wire 9 " in [8:0] $end
$var reg 9 # out [8:0] $end
$upscope $end
$scope module test $end
$var wire 7 $ z [6:0] $end
$var reg 1 % clock $end
$var reg 1 & enable $end
$var reg 7 ' x [6:0] $end
$scope module m4 $end
$var wire 1 % clock $end
$var wire 7 ( x [6:0] $end
$var wire 7 ) z [6:0] $end
$var wire 7 * mul2int [6:0] $end
$scope module m1 $end
$var wire 7 + x [6:0] $end
$var wire 7 , z [6:0] $end
$upscope $end
$scope module m2 $end
$var wire 7 - x [6:0] $end
$var wire 7 . z [6:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx .
bx -
bx ,
b10 +
bx *
bx )
b10 (
b10 '
1&
0%
bx $
bx #
bz "
z!
$end
#1
1%
#2
b100 *
b100 ,
b100 -
#3
0%
b100 '
b100 (
b100 +
#4
1%
b1000 $
b1000 )
b1000 .
#5
b1000 *
b1000 ,
b1000 -
#6
0%
b1000 '
b1000 (
b1000 +
#7
1%
b10000 $
b10000 )
b10000 .
#8
b10000 *
b10000 ,
b10000 -
#9
0%
