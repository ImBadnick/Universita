$date
	Mon Oct 28 20:52:36 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 8 ! z [7:0] $end
$var reg 1 " clk $end
$var reg 3 # x [2:0] $end
$var reg 3 $ y [2:0] $end
$scope module myccu $end
$var wire 1 " clk $end
$var wire 3 % x [2:0] $end
$var wire 3 & y [2:0] $end
$var wire 8 ' z [7:0] $end
$var wire 8 ( outreg [7:0] $end
$var wire 8 ) inreg [7:0] $end
$var wire 1 * inalu $end
$var wire 8 + confalu [7:0] $end
$scope module myconf $end
$var wire 3 , x [2:0] $end
$var wire 3 - y [2:0] $end
$var wire 1 * z $end
$upscope $end
$scope module om $end
$var wire 8 . z [7:0] $end
$var wire 8 / x [7:0] $end
$upscope $end
$scope module s $end
$var wire 1 " clk $end
$var wire 1 0 enable $end
$var wire 8 1 s1 [7:0] $end
$var wire 8 2 x [7:0] $end
$var reg 8 3 registroN [7:0] $end
$upscope $end
$scope module s2 $end
$var wire 1 " clk $end
$var wire 1 4 enable $end
$var wire 8 5 s1 [7:0] $end
$var wire 1 * x $end
$var reg 8 6 registroN [7:0] $end
$upscope $end
$scope module somm $end
$var wire 1 7 ic $end
$var wire 1 * inalu $end
$var wire 8 8 x [7:0] $end
$var wire 8 9 z [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 9
b0 8
17
b0 6
b0 5
14
b0 3
bx 2
b0 1
10
b0 /
b0 .
b10 -
b10 ,
b0 +
x*
bx )
b0 (
b0 '
b10 &
b10 %
b10 $
b10 #
0"
b0 !
$end
#2
1*
#4
b1 )
b1 2
b1 9
#7
b1 +
b1 5
b1 6
b1 !
b1 '
b1 .
b1 (
b1 /
b1 1
b1 3
b1 8
b11 $
b11 &
b11 -
b11 #
b11 %
b11 ,
1"
#8
0"
#9
b10 )
b10 2
b10 9
#12
b1 #
b1 %
b1 ,
#14
0*
#15
b10 !
b10 '
b10 .
b10 (
b10 /
b10 1
b10 3
b10 8
b0 +
b0 5
b0 6
1"
#16
0"
#19
b11 #
b11 %
b11 ,
#21
1*
#23
b1 +
b1 5
b1 6
b11 !
b11 '
b11 .
b11 (
b11 /
b11 1
b11 3
b11 8
b11 )
b11 2
b11 9
1"
#24
0"
#25
b100 )
b100 2
b100 9
#26
b10 #
b10 %
b10 ,
#28
0*
#30
b11 )
b11 2
b11 9
#31
b0 +
b0 5
b0 6
1"
#32
0"
#33
b11 #
b11 %
b11 ,
#35
1*
#37
b100 )
b100 2
b100 9
#39
b1 +
b1 5
b1 6
b100 !
b100 '
b100 .
b100 (
b100 /
b100 1
b100 3
b100 8
1"
#40
0"
#41
b101 )
b101 2
b101 9
#43
